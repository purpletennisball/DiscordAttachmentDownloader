name: Build & Release

on:
  push:
    tags:
      - "**"

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'macos-latest']
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.11.3
        uses: actions/setup-python@v2
        with:
          python-version: 3.11.3

      - name: Install dependencies
        run: pip install . 
        
      - name: Install pyinstaller
        run: pip install pyinstaller

      - name: Build executable with PyInstaller
        run: pyinstaller main.spec
      
      - name: Zip .app bundle
        if: matrix.os == 'macos-latest'
        run: |
          cd dist
          zip -r ../release/MyApp-macOS.zip MyApp.app
        shell: bash

      - name: Upload zipped .app
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: build-macos-latest
          path: release/MyApp-macOS.zip
      
      - name: Package executable
        if: matrix.os != 'macos-latest'
        run: |
          mkdir package
          cp -r dist/* package/
        shell: bash

      - name: Upload build artifact
        if: matrix.os != 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: DiscordAttachmentDownloader ${{ matrix.os }}
          path: package

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}